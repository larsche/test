--primary

\                                                                                                                               QUERY PLAN                                                                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=117.18..117.18 rows=1 width=44) (actual time=0.304..0.304 rows=1 loops=1)
   Sort Key: c.created_date DESC, c.coupon_id, cb.created_date, cbr.sort_order
   Sort Method: quicksort  Memory: 25kB
   ->  Nested Loop Left Join  (cost=13.77..117.17 rows=1 width=44) (actual time=0.279..0.282 rows=1 loops=1)
         ->  Nested Loop  (cost=13.64..116.26 rows=1 width=52) (actual time=0.275..0.277 rows=1 loops=1)
               ->  Nested Loop  (cost=13.08..114.45 rows=1 width=68) (actual time=0.235..0.237 rows=1 loops=1)
                     ->  Nested Loop  (cost=12.51..112.62 rows=1 width=60) (actual time=0.190..0.191 rows=1 loops=1)
                           ->  Nested Loop  (cost=11.95..21.04 rows=1 width=48) (actual time=0.154..0.156 rows=1 loops=1)
                                 ->  Nested Loop  (cost=11.39..14.43 rows=1 width=32) (actual time=0.149..0.149 rows=1 loops=1)
                                       ->  HashAggregate  (cost=10.82..10.83 rows=1 width=8) (actual time=0.122..0.122 rows=1 loops=1)
                                             Group Key: c2.coupon_id
                                             ->  Limit  (cost=10.81..10.81 rows=1 width=16) (actual time=0.118..0.118 rows=1 loops=1)
                                                   ->  Sort  (cost=10.81..10.81 rows=1 width=16) (actual time=0.116..0.117 rows=1 loops=1)
                                                         Sort Key: c2.created_date DESC
                                                         Sort Method: quicksort  Memory: 25kB
                                                         ->  Nested Loop Semi Join  (cost=1.12..10.80 rows=1 width=16) (actual time=0.102..0.103 rows=1 loops=1)
                                                               ->  Index Scan using iuq_bs_coupon_coupon_ref on bs_coupon c2  (cost=0.56..3.60 rows=1 width=16) (actual time=0.074..0.075 rows=1 loops=1)
                                                                     Index Cond: (coupon_ref = '2875506373'::bigint)
                                                                     Filter: ((created_date >= '2020-10-01 00:00:00+02'::timestamp with time zone) AND (internal_punter_id = 36156100) AND (archive_status = 0) AND (migration_status = 0) AND (created_date <= now()))
                                                               ->  Index Scan using ifk_bs_combination_coupon_id on bs_combination cb2  (cost=0.56..6.60 rows=2 width=8) (actual time=0.026..0.026 rows=1 loops=1)
                                                                     Index Cond: (coupon_id = c2.coupon_id)
                                                                     Filter: (status = ANY ('{1,2,3,7}'::integer[]))
                                       ->  Index Scan using pk_bs_coupon on bs_coupon c  (cost=0.56..3.59 rows=1 width=24) (actual time=0.025..0.025 rows=1 loops=1)
                                             Index Cond: (coupon_id = c2.coupon_id)
                                             Filter: ((archive_status = 0) AND (migration_status = 0) AND (internal_punter_id = 36156100))
                                 ->  Index Scan using ifk_bs_combination_coupon_id on bs_combination cb  (cost=0.56..6.58 rows=3 width=32) (actual time=0.005..0.005 rows=1 loops=1)
                                       Index Cond: (coupon_id = c.coupon_id)
                           ->  Index Scan using ifk_bs_combination_row_combination_id on bs_combination_row cbr  (cost=0.56..90.83 rows=75 width=20) (actual time=0.034..0.035 rows=1 loops=1)
                                 Index Cond: (combination_id = cb.combination_id)
                     ->  Index Only Scan using pk_bs_coupon_row on bs_coupon_row cr  (cost=0.56..1.83 rows=1 width=8) (actual time=0.044..0.044 rows=1 loops=1)
                           Index Cond: (coupon_row_id = cbr.coupon_row_id)
                           Heap Fetches: 0
               ->  Index Only Scan using pk_bs_outcome on bs_outcome co  (cost=0.56..1.80 rows=1 width=16) (actual time=0.039..0.039 rows=1 loops=1)
                     Index Cond: (coupon_row_id = cbr.coupon_row_id)
                     Heap Fetches: 0
         ->  Index Only Scan using ind_fk_bs_combination_cashout_history_combination_id on bs_combination_cashout_history coh  (cost=0.13..0.90 rows=1 width=8) (actual time=0.003..0.003 rows=0 loops=1)
               Index Cond: (combination_id = cb.combination_id)
               Heap Fetches: 0
 Planning Time: 12.099 ms
 Execution Time: 0.577 ms
(40 rows)


-- standby 

                                                                                                                               QUERY PLAN                                                                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=117.18..117.18 rows=1 width=44) (actual time=0.141..0.143 rows=1 loops=1)
   Sort Key: c.created_date DESC, c.coupon_id, cb.created_date, cbr.sort_order
   Sort Method: quicksort  Memory: 25kB
   ->  Nested Loop Left Join  (cost=13.77..117.17 rows=1 width=44) (actual time=0.131..0.135 rows=1 loops=1)
         ->  Nested Loop  (cost=13.64..116.26 rows=1 width=52) (actual time=0.122..0.126 rows=1 loops=1)
               ->  Nested Loop  (cost=13.08..114.45 rows=1 width=68) (actual time=0.106..0.109 rows=1 loops=1)
                     ->  Nested Loop  (cost=12.51..112.62 rows=1 width=60) (actual time=0.091..0.094 rows=1 loops=1)
                           ->  Nested Loop  (cost=11.95..21.04 rows=1 width=48) (actual time=0.073..0.075 rows=1 loops=1)
                                 ->  Nested Loop  (cost=11.39..14.43 rows=1 width=32) (actual time=0.066..0.068 rows=1 loops=1)
                                       ->  HashAggregate  (cost=10.82..10.83 rows=1 width=8) (actual time=0.054..0.055 rows=1 loops=1)
                                             Group Key: c2.coupon_id
                                             ->  Limit  (cost=10.81..10.81 rows=1 width=16) (actual time=0.049..0.050 rows=1 loops=1)
                                                   ->  Sort  (cost=10.81..10.81 rows=1 width=16) (actual time=0.048..0.049 rows=1 loops=1)
                                                         Sort Key: c2.created_date DESC
                                                         Sort Method: quicksort  Memory: 25kB
                                                         ->  Nested Loop Semi Join  (cost=1.12..10.80 rows=1 width=16) (actual time=0.040..0.041 rows=1 loops=1)
                                                               ->  Index Scan using iuq_bs_coupon_coupon_ref on bs_coupon c2  (cost=0.56..3.60 rows=1 width=16) (actual time=0.021..0.022 rows=1 loops=1)
                                                                     Index Cond: (coupon_ref = '2875506373'::bigint)
                                                                     Filter: ((created_date >= '2020-10-01 00:00:00+02'::timestamp with time zone) AND (internal_punter_id = 36156100) AND (archive_status = 0) AND (migration_status = 0) AND (created_date <= now()))
                                                               ->  Index Scan using ifk_bs_combination_coupon_id on bs_combination cb2  (cost=0.56..6.60 rows=2 width=8) (actual time=0.016..0.016 rows=1 loops=1)
                                                                     Index Cond: (coupon_id = c2.coupon_id)
                                                                     Filter: (status = ANY ('{1,2,3,7}'::integer[]))
                                       ->  Index Scan using pk_bs_coupon on bs_coupon c  (cost=0.56..3.59 rows=1 width=24) (actual time=0.011..0.011 rows=1 loops=1)
                                             Index Cond: (coupon_id = c2.coupon_id)
                                             Filter: ((archive_status = 0) AND (migration_status = 0) AND (internal_punter_id = 36156100))
                                 ->  Index Scan using ifk_bs_combination_coupon_id on bs_combination cb  (cost=0.56..6.58 rows=3 width=32) (actual time=0.006..0.007 rows=1 loops=1)
                                       Index Cond: (coupon_id = c.coupon_id)
                           ->  Index Scan using ifk_bs_combination_row_combination_id on bs_combination_row cbr  (cost=0.56..90.83 rows=75 width=20) (actual time=0.017..0.017 rows=1 loops=1)
                                 Index Cond: (combination_id = cb.combination_id)
                     ->  Index Only Scan using pk_bs_coupon_row on bs_coupon_row cr  (cost=0.56..1.83 rows=1 width=8) (actual time=0.014..0.014 rows=1 loops=1)
                           Index Cond: (coupon_row_id = cbr.coupon_row_id)
                           Heap Fetches: 0
               ->  Index Only Scan using pk_bs_outcome on bs_outcome co  (cost=0.56..1.80 rows=1 width=16) (actual time=0.016..0.016 rows=1 loops=1)
                     Index Cond: (coupon_row_id = cbr.coupon_row_id)
                     Heap Fetches: 0
         ->  Index Only Scan using ind_fk_bs_combination_cashout_history_combination_id on bs_combination_cashout_history coh  (cost=0.13..0.90 rows=1 width=8) (actual time=0.008..0.008 rows=0 loops=1)
               Index Cond: (combination_id = cb.combination_id)
               Heap Fetches: 0
 Planning Time: 153.639 ms
 Execution Time: 0.313 ms
(40 rows)
